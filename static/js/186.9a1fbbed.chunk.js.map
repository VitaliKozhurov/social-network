{"version":3,"file":"static/js/186.9a1fbbed.chunk.js","mappings":"gLACA,G,QAAuB,uB,oBCAvB,EAAwB,4BAAxB,EAA2D,2BAA3D,EAA6F,2BAA7F,EAAiI,6B,SCOpHA,EAAgD,SAAHC,GAAmB,IACnEC,EAD2DD,EAALE,MACpCC,KAAI,SAACC,GACzB,IAAMC,EAAI,YAAAC,OAAeF,EAAKG,QAC9B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,UACnBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CACJC,GAAIR,EACJI,UAAW,SAAAK,GAAW,OAAAA,EAARC,SACCL,EAAS,IAAMA,EAAWA,CAAM,EAC9CC,SAEAP,EAAKY,YAPeZ,EAAKG,OAW1C,IAEA,OACIU,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAQC,SAAA,EACpBH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,qBACHV,IAGb,E,UCXA,GADyBiB,E,QAAAA,IAAuBC,EAAAA,GAAkBC,EAAAA,EAAAA,KAN1C,SAACC,GACrB,MAAO,CACHnB,MAAOmB,EAAMC,YAAYpB,MAEjC,IAEyBgB,ECTmB,SAAHlB,GAAiB,IAAZE,EAAKF,EAALE,MAC1C,OACIe,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAOC,SAAA,EACnBH,EAAAA,EAAAA,KAACT,EAAY,CAACG,MAAOA,KACrBM,EAAAA,EAAAA,KAACe,EAAAA,GAAM,MAGnB,G","sources":["webpack://way-of-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://way-of-samurai/./src/components/Dialogs/ChatSelector/ChatSelector.module.css?1689","components/Dialogs/ChatSelector/ChatSelector.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Dialogs_body__M1xq4\"};","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"ChatSelector_users__V9jzq\",\"user\":\"ChatSelector_user__C5QLQ\",\"link\":\"ChatSelector_link__xldD5\",\"active\":\"ChatSelector_active__iafuu\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./ChatSelector.module.css\";\r\nimport {UserType} from 'appTypes/types';\r\n\r\nexport type ChatSelectorPropsType = {\r\n    users: Array<UserType>;\r\n};\r\n\r\nexport const ChatSelector: React.FC<ChatSelectorPropsType> = ({ users }) => {\r\n    const usersList = users.map((user) => {\r\n        const path = `/message/${user.userId}`;\r\n        return (\r\n            <div className={s.user} key={user.userId}>\r\n                <NavLink\r\n                    to={path}\r\n                    className={({ isActive }) =>\r\n                        isActive ? s.link + \" \" + s.active : s.link\r\n                    }\r\n                >\r\n                    {user.userName}\r\n                </NavLink>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <h2>Chat with users:</h2>\r\n            {usersList}\r\n        </div>\r\n    );\r\n};\r\n","import {UserType} from 'appTypes/types';\r\nimport {AppStateType} from 'redux/redux-store';\r\nimport {connect} from 'react-redux';\r\nimport {Dialogs} from './Dialogs';\r\nimport {withAuthRedirect} from 'hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {ComponentType} from 'react';\r\n\r\n// Свойства\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>;\r\n};\r\n// Функция, которая возвращает необходимые компоненте данные из стейта\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.dialogsPage.users,\r\n    };\r\n};\r\n\r\nconst DialogsContainer = compose<ComponentType>(withAuthRedirect, connect(mapStateToProps))(Dialogs)\r\nexport default DialogsContainer","import React, {FC} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {Outlet} from 'react-router-dom';\r\nimport {ChatSelector} from './ChatSelector/ChatSelector';\r\nimport {UserType} from 'appTypes/types';\r\n\r\ntype DialogsPropsType = {\r\n    users:Array<UserType>\r\n}\r\n\r\nexport const Dialogs:FC<DialogsPropsType> = ({users}) => {\r\n    return (\r\n        <div className={s.body}>\r\n            <ChatSelector users={users} />\r\n            <Outlet />\r\n        </div>\r\n    );\r\n};\r\n"],"names":["ChatSelector","_ref","usersList","users","map","user","path","concat","userId","_jsx","className","s","children","NavLink","to","_ref2","isActive","userName","_jsxs","compose","withAuthRedirect","connect","state","dialogsPage","Outlet"],"sourceRoot":""}